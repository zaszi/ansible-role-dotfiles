---
- name: Verify whether WeeChat configuration exists
  stat:
    path: "/home/{{ ansible_user }}/.weechat"
  register: config
  when: weechat|bool

- name: Copy WeeChat backup archive
  synchronize:
    src: "{{ weechat_backup_location }}"
    dest: "/home/{{ ansible_user }}/weechat_config.tar.gz"
  when: weechat|bool and not config.stat.exists

- name: Restore WeeChat configuration backup
  unarchive:
    src: "/home/{{ ansible_user }}/weechat_config.tar.gz"
    dest: "/home/{{ ansible_user }}"
    remote_src: true
  when: weechat|bool and not config.stat.exists

- name: Remove WeeChat backup archive
  file:
    path: "/home/{{ ansible_user }}/weechat_config.tar.gz"
    state: absent
  when: weechat|bool and not config.stat.exists

- name: Ensure /var/lib/systemd/linger exists
  file:
    path: /var/lib/systemd/linger
    owner: root
    group: root
    mode: 0755
    state: directory
  when: weechat|bool

- name: Verify whether lingering is enabled for user
  stat:
    path: "/var/lib/systemd/linger/{{ ansible_user }}"
  register: linger
  when: weechat|bool

- name: Enable lingering for user
  become: true
  shell: loginctl enable-linger "{{ ansible_user }}"
  when: weechat|bool and not linger.stat.exists

- name: Ensure ~/.config/systemd/user exists
  file:
    path: "/home/{{ ansible_user }}/.config/systemd/user"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0700
    state: directory
  when: weechat|bool

- name: Install weechat-headless systemd unit file
  copy:
    src: weechat-headless.service
    dest: "/home/{{ ansible_user }}/.config/systemd/user"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0600
  when: weechat|bool

- name: Enable weechat-headless service
  systemd:
    name: weechat-headless.service
    enabled: true
    scope: user
    state: started
    daemon_reload: true
  when: weechat|bool
